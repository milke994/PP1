INFO  20:37:40,669 - Compiling source file: C:\Users\Aleksandar\Downloads\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  20:37:40,714 - #2 program
INFO  20:37:40,714 - #17 MJProgram
INFO  20:37:40,715 - #17 int
INFO  20:37:40,715 - #17 x
INFO  20:37:40,716 - #5 ;
INFO  20:37:40,717 - #17 int
INFO  20:37:40,717 - #17 y
INFO  20:37:40,717 - #5 ;
INFO  20:37:40,717 - #22 const
INFO  20:37:40,717 - #17 char
INFO  20:37:40,717 - #17 a
INFO  20:37:40,717 - #12 =
INFO  20:37:40,718 - #18 a
INFO  20:37:40,718 - #5 ;
INFO  20:37:40,718 - #24 enum
INFO  20:37:40,718 - #17 Broj
INFO  20:37:40,718 - #3 {
INFO  20:37:40,718 - #17 NULA
INFO  20:37:40,718 - #8 ,
INFO  20:37:40,719 - #17 JEDAN
INFO  20:37:40,719 - #8 ,
INFO  20:37:40,721 - #17 PET
INFO  20:37:40,721 - #12 =
INFO  20:37:40,721 - #16 5
INFO  20:37:40,721 - #8 ,
INFO  20:37:40,721 - #17 DESET
INFO  20:37:40,721 - #12 =
INFO  20:37:40,721 - #16 10
INFO  20:37:40,721 - #4 }
INFO  20:37:40,721 - #3 {
INFO  20:37:40,722 - #17 int
INFO  20:37:40,722 - #17 k
INFO  20:37:40,722 - #6 (
INFO  20:37:40,722 - #7 )
INFO  20:37:40,723 - #17 int
INFO  20:37:40,723 - #17 c
INFO  20:37:40,723 - #5 ;
INFO  20:37:40,723 - #3 {
INFO  20:37:40,723 - #17 c
INFO  20:37:40,724 - #12 =
INFO  20:37:40,724 - #16 2
INFO  20:37:40,724 - #5 ;
INFO  20:37:40,725 - #10 return
INFO  20:37:40,725 - #17 c
INFO  20:37:40,725 - #11 +
INFO  20:37:40,725 - #16 2
INFO  20:37:40,726 - #5 ;
INFO  20:37:40,726 - #4 }
INFO  20:37:40,726 - #13 void
INFO  20:37:40,727 - #17 main
INFO  20:37:40,727 - #6 (
INFO  20:37:40,727 - #7 )
INFO  20:37:40,727 - #17 int
INFO  20:37:40,727 - #17 niz
INFO  20:37:40,727 - #14 [
INFO  20:37:40,727 - #15 ]
INFO  20:37:40,727 - #5 ;
INFO  20:37:40,728 - #17 Broj
INFO  20:37:40,730 - #17 br
INFO  20:37:40,730 - #5 ;
INFO  20:37:40,730 - #3 {
INFO  20:37:40,730 - #17 x
INFO  20:37:40,730 - #12 =
INFO  20:37:40,731 - #16 3
INFO  20:37:40,731 - #5 ;
INFO  20:37:40,731 - #17 y
INFO  20:37:40,731 - #12 =
INFO  20:37:40,731 - #17 x
INFO  20:37:40,731 - #11 +
INFO  20:37:40,731 - #16 3
INFO  20:37:40,731 - #5 ;
INFO  20:37:40,731 - #17 br
INFO  20:37:40,731 - #12 =
INFO  20:37:40,731 - #17 JEDAN
INFO  20:37:40,731 - #5 ;
INFO  20:37:40,731 - #17 niz
INFO  20:37:40,731 - #12 =
INFO  20:37:40,731 - #35 new
INFO  20:37:40,731 - #17 int
INFO  20:37:40,731 - #14 [
INFO  20:37:40,731 - #16 2
INFO  20:37:40,731 - #15 ]
INFO  20:37:40,731 - #5 ;
INFO  20:37:40,732 - #17 niz
INFO  20:37:40,732 - #14 [
INFO  20:37:40,732 - #16 0
INFO  20:37:40,732 - #15 ]
INFO  20:37:40,732 - #12 =
INFO  20:37:40,732 - #17 x
INFO  20:37:40,732 - #43 *
INFO  20:37:40,732 - #17 y
INFO  20:37:40,733 - #5 ;
INFO  20:37:40,733 - #9 print
INFO  20:37:40,733 - #6 (
INFO  20:37:40,733 - #16 1
INFO  20:37:40,733 - #7 )
INFO  20:37:40,734 - #5 ;
INFO  20:37:40,734 - #9 print
INFO  20:37:40,734 - #6 (
INFO  20:37:40,734 - #17 x
INFO  20:37:40,734 - #7 )
INFO  20:37:40,734 - #5 ;
INFO  20:37:40,734 - #17 x
INFO  20:37:40,734 - #32 ++
INFO  20:37:40,734 - #5 ;
INFO  20:37:40,734 - #9 print
INFO  20:37:40,734 - #6 (
INFO  20:37:40,734 - #17 x
INFO  20:37:40,734 - #7 )
INFO  20:37:40,734 - #5 ;
INFO  20:37:40,734 - #9 print
INFO  20:37:40,734 - #6 (
INFO  20:37:40,734 - #17 a
INFO  20:37:40,734 - #7 )
INFO  20:37:40,734 - #5 ;
INFO  20:37:40,734 - #17 x
INFO  20:37:40,735 - #33 --
INFO  20:37:40,735 - #5 ;
INFO  20:37:40,735 - #9 print
INFO  20:37:40,735 - #6 (
INFO  20:37:40,735 - #17 x
INFO  20:37:40,735 - #7 )
INFO  20:37:40,735 - #5 ;
INFO  20:37:40,735 - #4 }
INFO  20:37:40,735 - #4 }
INFO  20:37:40,739 - Program(
  ProgName(
   MJProgram
  ) [ProgName]
  ConsVarClasses(
    ConsVarClasses(
      ConsVarClasses(
        ConsVarClasses(
          NoConsVarClasses(
          ) [NoConsVarClasses]
          VarD(
            VarDeclCorrect(
              Type(
               int
              ) [Type]
              VarId(
                VarIdent(
                 x
                  SBracketNo(
                  ) [SBracketNo]
                ) [VarIdent]
              ) [VarId]
            ) [VarDeclCorrect]
          ) [VarD]
        ) [ConsVarClasses]
        VarD(
          VarDeclCorrect(
            Type(
             int
            ) [Type]
            VarId(
              VarIdent(
               y
                SBracketNo(
                ) [SBracketNo]
              ) [VarIdent]
            ) [VarId]
          ) [VarDeclCorrect]
        ) [VarD]
      ) [ConsVarClasses]
      ConstD(
        ConstDecl(
          Type(
           char
          ) [Type]
          ConstId(
            CharConst(
             a
             a
            ) [CharConst]
          ) [ConstId]
        ) [ConstDecl]
      ) [ConstD]
    ) [ConsVarClasses]
    EnumD(
      EnumDecl(
       Broj
        EnumIdentL(
          EnumIdentL(
            EnumIdentL(
              EnumId(
                EnumIdent(
                 NULA
                  EnumIdentHaveNoValue(
                  ) [EnumIdentHaveNoValue]
                ) [EnumIdent]
              ) [EnumId]
              EnumIdent(
               JEDAN
                EnumIdentHaveNoValue(
                ) [EnumIdentHaveNoValue]
              ) [EnumIdent]
            ) [EnumIdentL]
            EnumIdent(
             PET
              EnumIdentHaveValue(
               5
              ) [EnumIdentHaveValue]
            ) [EnumIdent]
          ) [EnumIdentL]
          EnumIdent(
           DESET
            EnumIdentHaveValue(
             10
            ) [EnumIdentHaveValue]
          ) [EnumIdent]
        ) [EnumIdentL]
      ) [EnumDecl]
    ) [EnumD]
  ) [ConsVarClasses]
  MethodDeclarations(
    MethodDeclarations(
      NoMethodDecl(
      ) [NoMethodDecl]
      MethodDecl(
        MethodTypeN(
          Type(
           int
          ) [Type]
         k
        ) [MethodTypeN]
        NoFormParams(
        ) [NoFormParams]
        VarsYes(
          VarsNo(
          ) [VarsNo]
          VarDeclCorrect(
            Type(
             int
            ) [Type]
            VarId(
              VarIdent(
               c
                SBracketNo(
                ) [SBracketNo]
              ) [VarIdent]
            ) [VarId]
          ) [VarDeclCorrect]
        ) [VarsYes]
        Statements(
          Statements(
            NoStmt(
            ) [NoStmt]
            DesigStatement(
              DesignatorStEqualExpr(
                DesignatorBegin(
                 c
                ) [DesignatorBegin]
                AssignopDerived1(
                ) [AssignopDerived1]
                ExprEqualsTerm(
                  MulopFactor(
                    NumFactor(
                     2
                    ) [NumFactor]
                  ) [MulopFactor]
                ) [ExprEqualsTerm]
              ) [DesignatorStEqualExpr]
            ) [DesigStatement]
          ) [Statements]
          ReturnOnly(
            OptionExprRetYes(
              ExprAddopTerm(
                ExprEqualsTerm(
                  MulopFactor(
                    DesigFactor(
                      DesignatorBegin(
                       c
                      ) [DesignatorBegin]
                      OptionParenActParsNo(
                      ) [OptionParenActParsNo]
                    ) [DesigFactor]
                  ) [MulopFactor]
                ) [ExprEqualsTerm]
                AddopPlus(
                ) [AddopPlus]
                MulopFactor(
                  NumFactor(
                   2
                  ) [NumFactor]
                ) [MulopFactor]
              ) [ExprAddopTerm]
            ) [OptionExprRetYes]
          ) [ReturnOnly]
        ) [Statements]
      ) [MethodDecl]
    ) [MethodDeclarations]
    MethodDecl(
      VoidMethodName(
       main
      ) [VoidMethodName]
      NoFormParams(
      ) [NoFormParams]
      VarsYes(
        VarsYes(
          VarsNo(
          ) [VarsNo]
          VarDeclCorrect(
            Type(
             int
            ) [Type]
            VarId(
              VarIdent(
               niz
                SBracketYes(
                ) [SBracketYes]
              ) [VarIdent]
            ) [VarId]
          ) [VarDeclCorrect]
        ) [VarsYes]
        VarDeclCorrect(
          Type(
           Broj
          ) [Type]
          VarId(
            VarIdent(
             br
              SBracketNo(
              ) [SBracketNo]
            ) [VarIdent]
          ) [VarId]
        ) [VarDeclCorrect]
      ) [VarsYes]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            Statements(
                              NoStmt(
                              ) [NoStmt]
                              DesigStatement(
                                DesignatorStEqualExpr(
                                  DesignatorBegin(
                                   x
                                  ) [DesignatorBegin]
                                  AssignopDerived1(
                                  ) [AssignopDerived1]
                                  ExprEqualsTerm(
                                    MulopFactor(
                                      NumFactor(
                                       3
                                      ) [NumFactor]
                                    ) [MulopFactor]
                                  ) [ExprEqualsTerm]
                                ) [DesignatorStEqualExpr]
                              ) [DesigStatement]
                            ) [Statements]
                            DesigStatement(
                              DesignatorStEqualExpr(
                                DesignatorBegin(
                                 y
                                ) [DesignatorBegin]
                                AssignopDerived1(
                                ) [AssignopDerived1]
                                ExprAddopTerm(
                                  ExprEqualsTerm(
                                    MulopFactor(
                                      DesigFactor(
                                        DesignatorBegin(
                                         x
                                        ) [DesignatorBegin]
                                        OptionParenActParsNo(
                                        ) [OptionParenActParsNo]
                                      ) [DesigFactor]
                                    ) [MulopFactor]
                                  ) [ExprEqualsTerm]
                                  AddopPlus(
                                  ) [AddopPlus]
                                  MulopFactor(
                                    NumFactor(
                                     3
                                    ) [NumFactor]
                                  ) [MulopFactor]
                                ) [ExprAddopTerm]
                              ) [DesignatorStEqualExpr]
                            ) [DesigStatement]
                          ) [Statements]
                          DesigStatement(
                            DesignatorStEqualExpr(
                              DesignatorBegin(
                               br
                              ) [DesignatorBegin]
                              AssignopDerived1(
                              ) [AssignopDerived1]
                              ExprEqualsTerm(
                                MulopFactor(
                                  DesigFactor(
                                    DesignatorBegin(
                                     JEDAN
                                    ) [DesignatorBegin]
                                    OptionParenActParsNo(
                                    ) [OptionParenActParsNo]
                                  ) [DesigFactor]
                                ) [MulopFactor]
                              ) [ExprEqualsTerm]
                            ) [DesignatorStEqualExpr]
                          ) [DesigStatement]
                        ) [Statements]
                        DesigStatement(
                          DesignatorStEqualExpr(
                            DesignatorBegin(
                             niz
                            ) [DesignatorBegin]
                            AssignopDerived1(
                            ) [AssignopDerived1]
                            ExprEqualsTerm(
                              MulopFactor(
                                NewFactor(
                                  Type(
                                   int
                                  ) [Type]
                                  OptionSBracketExprYes(
                                    ExprEqualsTerm(
                                      MulopFactor(
                                        NumFactor(
                                         2
                                        ) [NumFactor]
                                      ) [MulopFactor]
                                    ) [ExprEqualsTerm]
                                  ) [OptionSBracketExprYes]
                                ) [NewFactor]
                              ) [MulopFactor]
                            ) [ExprEqualsTerm]
                          ) [DesignatorStEqualExpr]
                        ) [DesigStatement]
                      ) [Statements]
                      DesigStatement(
                        DesignatorStEqualExpr(
                          DesigExpr(
                            DesigExprBegin(
                              DesignatorBegin(
                               niz
                              ) [DesignatorBegin]
                            ) [DesigExprBegin]
                            ExprEqualsTerm(
                              MulopFactor(
                                NumFactor(
                                 0
                                ) [NumFactor]
                              ) [MulopFactor]
                            ) [ExprEqualsTerm]
                          ) [DesigExpr]
                          AssignopDerived1(
                          ) [AssignopDerived1]
                          ExprEqualsTerm(
                            MulopFactors(
                              MulopFactor(
                                DesigFactor(
                                  DesignatorBegin(
                                   x
                                  ) [DesignatorBegin]
                                  OptionParenActParsNo(
                                  ) [OptionParenActParsNo]
                                ) [DesigFactor]
                              ) [MulopFactor]
                              MulopMul(
                              ) [MulopMul]
                              DesigFactor(
                                DesignatorBegin(
                                 y
                                ) [DesignatorBegin]
                                OptionParenActParsNo(
                                ) [OptionParenActParsNo]
                              ) [DesigFactor]
                            ) [MulopFactors]
                          ) [ExprEqualsTerm]
                        ) [DesignatorStEqualExpr]
                      ) [DesigStatement]
                    ) [Statements]
                    PrintStatement(
                      ExprEqualsTerm(
                        MulopFactor(
                          NumFactor(
                           1
                          ) [NumFactor]
                        ) [MulopFactor]
                      ) [ExprEqualsTerm]
                      OptionNumConstNo(
                      ) [OptionNumConstNo]
                    ) [PrintStatement]
                  ) [Statements]
                  PrintStatement(
                    ExprEqualsTerm(
                      MulopFactor(
                        DesigFactor(
                          DesignatorBegin(
                           x
                          ) [DesignatorBegin]
                          OptionParenActParsNo(
                          ) [OptionParenActParsNo]
                        ) [DesigFactor]
                      ) [MulopFactor]
                    ) [ExprEqualsTerm]
                    OptionNumConstNo(
                    ) [OptionNumConstNo]
                  ) [PrintStatement]
                ) [Statements]
                DesigStatement(
                  DesignatorStIncrement(
                    DesignatorBegin(
                     x
                    ) [DesignatorBegin]
                  ) [DesignatorStIncrement]
                ) [DesigStatement]
              ) [Statements]
              PrintStatement(
                ExprEqualsTerm(
                  MulopFactor(
                    DesigFactor(
                      DesignatorBegin(
                       x
                      ) [DesignatorBegin]
                      OptionParenActParsNo(
                      ) [OptionParenActParsNo]
                    ) [DesigFactor]
                  ) [MulopFactor]
                ) [ExprEqualsTerm]
                OptionNumConstNo(
                ) [OptionNumConstNo]
              ) [PrintStatement]
            ) [Statements]
            PrintStatement(
              ExprEqualsTerm(
                MulopFactor(
                  DesigFactor(
                    DesignatorBegin(
                     a
                    ) [DesignatorBegin]
                    OptionParenActParsNo(
                    ) [OptionParenActParsNo]
                  ) [DesigFactor]
                ) [MulopFactor]
              ) [ExprEqualsTerm]
              OptionNumConstNo(
              ) [OptionNumConstNo]
            ) [PrintStatement]
          ) [Statements]
          DesigStatement(
            DesignatorStDecrement(
              DesignatorBegin(
               x
              ) [DesignatorBegin]
            ) [DesignatorStDecrement]
          ) [DesigStatement]
        ) [Statements]
        PrintStatement(
          ExprEqualsTerm(
            MulopFactor(
              DesigFactor(
                DesignatorBegin(
                 x
                ) [DesignatorBegin]
                OptionParenActParsNo(
                ) [OptionParenActParsNo]
              ) [DesigFactor]
            ) [MulopFactor]
          ) [ExprEqualsTerm]
          OptionNumConstNo(
          ) [OptionNumConstNo]
        ) [PrintStatement]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  20:37:40,742 - Detektovano koriscenje lokalne promenljive ( c) na liniji 9 Var c: int, 0, 1 
INFO  20:37:40,742 - Detektovano koriscenje lokalne promenljive ( c) na liniji 10 Var c: int, 0, 1 
INFO  20:37:40,742 - Detektovano koriscenje globalne promenljive ( x) na liniji 14 Var x: int, 0, 0 
INFO  20:37:40,742 - Detektovano koriscenje globalne promenljive ( y) na liniji 15 Var y: int, 1, 0 
INFO  20:37:40,742 - Detektovano koriscenje globalne promenljive ( x) na liniji 15 Var x: int, 0, 0 
INFO  20:37:40,742 - Detektovano koriscenje lokalne promenljive ( br) na liniji 17 Var br: int, 1, 1 
ERROR 20:37:40,742 - Semanticka greska, promenljiva sa imenom JEDAN nije deklarisana, na liniji 17
INFO  20:37:40,742 - Detektovano koriscenje lokalne promenljive ( JEDAN) na liniji 17 Var noObj: notype, -1, -1 
ERROR 20:37:40,742 - Semanticka greska, designator i expression nisu istog tipa  na liniji 17
INFO  20:37:40,742 - Detektovano koriscenje lokalne promenljive ( niz) na liniji 19 Var niz: Arr of int, 0, 1 
INFO  20:37:40,743 - Detektovano koriscenje lokalne promenljive ( niz) na liniji 20 Var niz: Arr of int, 0, 1 
INFO  20:37:40,743 - Detektovano koriscenje globalne promenljive ( x) na liniji 20 Var x: int, 0, 0 
INFO  20:37:40,743 - Detektovano koriscenje globalne promenljive ( y) na liniji 20 Var y: int, 1, 0 
INFO  20:37:40,743 - Detektovano koriscenje globalne promenljive ( x) na liniji 24 Var x: int, 0, 0 
INFO  20:37:40,743 - Detektovano koriscenje globalne promenljive ( x) na liniji 26 Var x: int, 0, 0 
INFO  20:37:40,743 - Detektovano koriscenje globalne promenljive ( x) na liniji 28 Var x: int, 0, 0 
INFO  20:37:40,743 - Detektovano koriscenje konstante ( a) na liniji 30 Con a: char, 97, 0 
INFO  20:37:40,743 - Detektovano koriscenje globalne promenljive ( x) na liniji 32 Var x: int, 0, 0 
INFO  20:37:40,743 - Detektovano koriscenje globalne promenljive ( x) na liniji 34 Var x: int, 0, 0 
ERROR 20:37:40,743 - Parsiranje NIJE uspesno zavrseno!
